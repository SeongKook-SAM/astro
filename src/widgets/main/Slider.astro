---
import { Image } from 'astro:assets';
import leftArrow from 'assets/image/left-arrow.svg';
import rightArrow from 'assets/image/right-arrow.svg';
import nPlaceBanner from 'assets/image/main_banner_pc_nplace.png';
import helpBanner from 'assets/image/main_banner_pc_main.svg';
import instagramBanner from 'assets/image/main_banner_pc_instagram.svg';
import youtubeBanner from 'assets/image/main_banner_pc_youtube.svg';

// 배너 이미지 배열
const banners = [
  { src: nPlaceBanner, alt: 'nPlaceBanner' },
  { src: helpBanner, alt: 'helpBanner' },
  { src: instagramBanner, alt: 'instagramBanner' },
  { src: youtubeBanner, alt: 'youtubeBanner' },
];

// 배너 리스트 텍스트 문구
const BANNER_TEXT = {
  nPlaceBanner: () => {
    return `
   <div class="absolute top-1/2 left-[35%] -translate-x-1/2 -translate-y-1/2 flex flex-col gap-[clamp(8px,1vw,20px)] text-white">
                <span class="bg-white text-[#5ef68f] px-[clamp(4px,0.5vw,10px)] py-[clamp(2px,0.3vw,6px)] rounded-full flex justify-center items-center w-[clamp(50px,8vw,80px)] font-bold text-[clamp(12px,1.2vw,18px)]">
                  NEW
                </span>
                <h2 class="text-[length:clamp(24px,3.5vw,50px)] leading-[1.2]">
                  N플레이스 서비스 <br />
                  <span class="font-bold">트래픽, 저장하기 신규 오픈</span>
                </h2>
                <p class="text-[length:clamp(16px,1.8vw,24px)] leading-[1.3]">
                  더 많은 <span class="font-bold">유입과 관심</span>으로
                  <br />
                  <span class="font-bold">플레이스의 경쟁력</span>을 높여보세요!
                </p>

                <button
                  type="button"
                  class="border border-white px-[clamp(8px,1vw,16px)] py-[clamp(4px,0.5vw,10px)] font-bold w-[clamp(80px,10vw,120px)] cursor-pointer hover:bg-white hover:text-[#5ef68f] transition-colors"
                >
                  <a href="/service/nplace" class="text-[length:clamp(14px,1.5vw,20px)]">바로가기</a>
                </button>
              </div>
    `;
  },
  helpBanner: () => {
    return `
       <div class="absolute top-1/2 left-[35%] -translate-x-1/2 -translate-y-1/2 flex flex-col gap-[clamp(8px,1vw,20px)] text-white">
                <span class="bg-white text-[#00cce9] px-[clamp(4px,0.5vw,10px)] py-[clamp(2px,0.3vw,6px)] rounded-full flex justify-center items-center w-[clamp(50px,8vw,80px)] font-bold text-[clamp(12px,1.2vw,18px)]">
                  MAIN
                </span>
                <h2 class="text-[length:clamp(24px,3.5vw,50px)] leading-[1.2]">
                 내 SNS를 도와주는 <br />
                  <span class="font-bold">마케팅 파트너 SNS헬프</span>
                </h2>
                <p class="text-[length:clamp(16px,1.8vw,24px)] leading-[1.3]">
                부담없이 <span class="font-bold">합리적인 가격</span>으로
                  <br />
                  <span class="font-bold">높은 퀄리티의 서비스를</span> 이용해보세요!
                </p>

                <button
                  type="button"
                  class="border border-white px-[clamp(8px,1vw,16px)] py-[clamp(4px,0.5vw,10px)] font-bold w-[clamp(80px,10vw,120px)] cursor-pointer hover:bg-white hover:text-[#00cce9] transition-colors"
                >
                  <a href="#" class="text-[length:clamp(14px,1.5vw,20px)]">바로가기</a>
                </button>
              </div>
    `;
  },
  instagramBanner: () => {
    return `
       <div class="absolute top-1/2 left-[35%] -translate-x-1/2 -translate-y-1/2 flex flex-col gap-[clamp(8px,1vw,20px)] text-white">
                <span class="bg-white text-[#705cfe] px-[clamp(4px,0.5vw,10px)] py-[clamp(2px,0.3vw,6px)] rounded-full flex justify-center items-center w-[clamp(50px,8vw,80px)] font-bold text-[clamp(12px,1.2vw,18px)]">
                  NEW
                </span>
                <h2 class="text-[length:clamp(24px,3.5vw,50px)] leading-[1.2]">
                 인스타그램 서비스 <br />
                  <span class="font-bold">원하는 성별로 다채롭게!</span>
                </h2>
                <p class="text-[length:clamp(16px,1.8vw,24px)] leading-[1.3]">
                <span class="font-bold">인스타그램</span> 팔로워·좋아요·댓글
                  <br />
                  <span class="font-bold">성별별 신규 서비스 오픈</span>
                </p>

                <button
                  type="button"
                  class="border border-white px-[clamp(8px,1vw,16px)] py-[clamp(4px,0.5vw,10px)] font-bold w-[clamp(80px,10vw,120px)] cursor-pointer hover:bg-white hover:text-[#705cfe] transition-colors"
                >
                  <a href="/service/instagram" class="text-[length:clamp(14px,1.5vw,20px)]">바로가기</a>
                </button>
              </div>
    `;
  },
  youtubeBanner: () => {
    return `
       <div class="absolute top-1/2 left-[35%] -translate-x-1/2 -translate-y-1/2 flex flex-col gap-[clamp(8px,1vw,20px)] text-white">
                <span class="bg-white text-[#b51307] px-[clamp(4px,0.5vw,10px)] py-[clamp(2px,0.3vw,6px)] rounded-full flex justify-center items-center w-[clamp(50px,8vw,80px)] font-bold text-[clamp(12px,1.2vw,18px)]">
                  HOT
                </span>
                <h2 class="text-[length:clamp(24px,3.5vw,50px)] leading-[1.2]">
                  <span class="font-bold">유튜브 채널 키우기</span><br />
                   SNS헬프로 해결하세요
                </h2>
                <p class="text-[length:clamp(16px,1.8vw,24px)] leading-[1.3]">
                자연스럽게 구독자를 늘리고,
                  <br />
                  <span class="font-bold">수익 창출 조건 달성</span>까지!
                </p>

                <button
                  type="button"
                  class="border border-white px-[clamp(8px,1vw,16px)] py-[clamp(4px,0.5vw,10px)] font-bold w-[clamp(80px,10vw,120px)] cursor-pointer hover:bg-white hover:text-[#b51307] transition-colors"
                >
                  <a href="/service/youtube" class="text-[length:clamp(14px,1.5vw,20px)]">바로가기</a>
                </button>
              </div>
    `;
  },
};
---

<section class="w-full h-auto relative overflow-hidden">
  <!-- Left -->
  <button id="prev-slide" class="absolute top-1/2 left-[7%] -translate-y-1/2 z-10">
    <Image
      src={leftArrow}
      alt="left-arrow"
      width={20}
      height={20}
      class="opacity-50 hover:opacity-100 cursor-pointer transition-opacity"
    />
  </button>

  <!-- Image Slider -->
  <div id="slider-container" class="w-full h-full relative">
    <div id="slider-track" class="flex transition-transform duration-500 h-full">
      {/* 마지막 슬라이드 복제 (첫 번째 위치에 놓음) */}
      <div
        class="slide min-w-full h-full flex items-center justify-center relative"
        data-index="clone-last"
      >
        {/* 마지막 배너의 텍스트 콘텐츠 추가 */}
        <div
          set:html={typeof BANNER_TEXT[
            banners[banners.length - 1].alt as keyof typeof BANNER_TEXT
          ] === 'function'
            ? BANNER_TEXT[banners[banners.length - 1].alt as keyof typeof BANNER_TEXT]()
            : BANNER_TEXT[banners[banners.length - 1].alt as keyof typeof BANNER_TEXT]}
        />

        <Image
          src={banners[banners.length - 1].src}
          alt={banners[banners.length - 1].alt}
          class="w-full h-full object-cover"
        />
      </div>

      {/* 원래 슬라이드들 */}
      {
        banners.map((banner, index) => {
          // BANNER_TEXT에서 해당 배너의 컨텐츠 가져오기
          const content = BANNER_TEXT[banner.alt as keyof typeof BANNER_TEXT];
          // 함수인 경우 실행하여 HTML 문자열 얻기
          const htmlContent = typeof content === 'function' ? content() : content;

          return (
            <div
              class="slide min-w-full h-full flex items-center justify-center relative"
              data-index={index}
            >
              {/* HTML 문자열을 렌더링하기 위해 set:html 사용 */}
              <div set:html={htmlContent} />
              <Image
                src={banner.src}
                alt={banner.alt}
                class="w-full h-full object-cover"
                loading={index === 0 ? 'eager' : 'lazy'}
                fetchpriority={index === 0 ? 'high' : undefined}
                decoding={index === 0 ? 'sync' : 'async'}
              />
            </div>
          );
        })
      }

      {/* 첫 번째 슬라이드 복제 (마지막 위치에 놓음) */}
      <div
        class="slide min-w-full h-full flex items-center justify-center relative"
        data-index="clone-first"
      >
        {/* 첫 번째 배너의 텍스트 콘텐츠 추가 */}
        <div
          set:html={typeof BANNER_TEXT[banners[0].alt as keyof typeof BANNER_TEXT] === 'function'
            ? BANNER_TEXT[banners[0].alt as keyof typeof BANNER_TEXT]()
            : BANNER_TEXT[banners[0].alt as keyof typeof BANNER_TEXT]}
        />

        <Image src={banners[0].src} alt={banners[0].alt} class="w-full h-full object-cover" />
      </div>
    </div>

    <!-- Indicators -->
    <div class="absolute bottom-5 left-1/2 -translate-x-1/2 flex gap-2">
      {
        banners.map((_, index) => (
          <button
            class="indicator w-8 h-1 rounded-full bg-white opacity-20 hover:opacity-70 transition-opacity cursor-pointer"
            data-index={index}
            aria-label={`슬라이드 넘버: ${index + 1}`}
          />
        ))
      }
    </div>
  </div>

  <!-- Right -->
  <button id="next-slide" class="absolute top-1/2 right-[7%] -translate-y-1/2 z-10">
    <Image
      src={rightArrow}
      alt="right-arrow"
      width={20}
      height={20}
      class="opacity-50 hover:opacity-100 cursor-pointer transition-opacity"
    />
  </button>
</section>

<!-- 슬라이더 함수 -->
<script is:inline>
  // 슬라이더 요소 선택
  const sliderTrack = document.getElementById('slider-track');
  const slides = document.querySelectorAll('.slide');
  const prevButton = document.getElementById('prev-slide');
  const nextButton = document.getElementById('next-slide');
  const indicators = document.querySelectorAll('.indicator');

  // 실제 슬라이드 개수 (복제된 항목 제외)
  const realSlideCount = indicators.length;
  // 전체 슬라이드 개수 (복제된 항목 포함)
  const totalSlideCount = slides.length;

  // 슬라이더 상태 (1부터 시작 - 첫 번째 슬라이드가 복제된 마지막 슬라이드 다음)
  let currentSlide = 1;
  let isTransitioning = false;

  // 터치 이벤트 변수
  let touchStartX = 0;
  let touchEndX = 0;

  // 실제 슬라이드 인덱스 계산 (복제 슬라이드 고려)
  function getRealIndex(index) {
    if (index === 0) return realSlideCount - 1;

    if (index === totalSlideCount - 1) return 0;

    return index - 1;
  }

  // 인디케이터 업데이트
  function updateIndicators(realIndex) {
    indicators.forEach((indicator, i) => {
      if (i === realIndex) {
        indicator.classList.add('opacity-70');
        indicator.classList.remove('opacity-20');
      } else {
        indicator.classList.add('opacity-20');
        indicator.classList.remove('opacity-70');
      }
    });
  }

  // 슬라이드 업데이트 함수
  function updateSlide(index, smooth = true) {
    if (isTransitioning) return;

    if (sliderTrack) {
      if (smooth) {
        sliderTrack.style.transition = 'transform 0.8s ease-in-out';
      } else {
        sliderTrack.style.transition = 'none';
      }

      sliderTrack.style.transform = `translateX(-${index * 100}%)`;
    }

    // 현재 슬라이드 업데이트
    currentSlide = index;

    // 인디케이터 업데이트 (실제 슬라이드 인덱스로 변환)
    const realIndex = getRealIndex(currentSlide);
    updateIndicators(realIndex);

    // 트랜지션 중 플래그 설정
    if (smooth) {
      isTransitioning = true;
      setTimeout(() => {
        isTransitioning = false;

        if (currentSlide === totalSlideCount - 1) {
          jumpToSlide(1);
        }

        if (currentSlide === 0) {
          jumpToSlide(realSlideCount);
        }
      }, 800);
    }
  }

  // 트랜지션 없이 슬라이드 점프
  function jumpToSlide(index) {
    updateSlide(index, false);
  }

  // 초기 위치 설정 - 중복된 코드 제거
  if (sliderTrack) {
    sliderTrack.style.transition = 'none';
    sliderTrack.style.transform = `translateX(-${currentSlide * 100}%)`;

    sliderTrack.offsetHeight;

    setTimeout(() => {
      sliderTrack.style.transition = 'transform 0.5s ease';
    }, 50);
  }

  // 초기 인디케이터 상태 설정 - 첫 번째 인디케이터 활성화
  updateIndicators(0);

  // 스와이프 처리 함수
  function handleSwipe() {
    if (touchEndX < touchStartX - 50) {
      goToNextSlide();
    } else if (touchEndX > touchStartX + 50) {
      goToPrevSlide();
    }
  }

  // 다음 슬라이드로 이동
  function goToNextSlide() {
    updateSlide(currentSlide + 1);
  }

  // 이전 슬라이드로 이동
  function goToPrevSlide() {
    updateSlide(currentSlide - 1);
  }

  // 이벤트 리스너 설정
  if (prevButton) {
    prevButton.addEventListener('click', goToPrevSlide);
  }

  if (nextButton) {
    nextButton.addEventListener('click', goToNextSlide);
  }

  // 인디케이터 클릭 이벤트
  indicators.forEach((indicator, index) => {
    indicator.addEventListener('click', () => {
      updateSlide(index + 1);
    });
  });

  // 자동 슬라이드 설정(10초)
  const autoSlideInterval = 10000;
  let autoSlideTimer = setInterval(goToNextSlide, autoSlideInterval);

  // 사용자 상호작용 관리
  const sliderContainer = document.getElementById('slider-container');
  if (sliderContainer) {
    sliderContainer.addEventListener('mouseenter', () => {
      clearInterval(autoSlideTimer);
    });

    sliderContainer.addEventListener('mouseleave', () => {
      autoSlideTimer = setInterval(goToNextSlide, autoSlideInterval);
    });

    // 터치 이벤트 처리
    sliderContainer.addEventListener('touchstart', (e) => {
      touchStartX = e.changedTouches[0].screenX;
    });

    sliderContainer.addEventListener('touchend', (e) => {
      touchEndX = e.changedTouches[0].screenX;
      handleSwipe();
    });
  }

  // 트랜지션 종료 이벤트 리스너
  if (sliderTrack) {
    sliderTrack.addEventListener('transitionend', () => {
      isTransitioning = false;
    });
  }
</script>
